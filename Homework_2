#include <iostream>

enum Symbol_type {Cross,Zero}; //перечисление с возможными вариантами символов для игры в крестики-нолики

enum class Sum {zero,one,two,three};

enum class empty1 {zero,one,two,three,four,five,six,seven,eight,nine};


struct field //Структура данных «Поле для игры в крестики-нолики»
{
    Sum sum_x;//поле может иметь от 0 до 3 значений Х и 0
    Sum sum_0;
    empty1 emp; //поле может иметь от 0 до 9 пустых клеток
};

union example{
int ei;
char ech;
float ef;
};
struct init_example
{
    example E;
    int is_int : 1;
    int is_char : 1;
    int is_float : 1;
};

int main()
{
    //переменные пройденных типов данных
    int i = 0;
    short s = -500;
    long l = 1000;
    long long ll = 10000;
    unsigned int ui = 500;
    unsigned short us = 500;
    unsigned long ul = 1000;
    unsigned long long ull = 10000;
    char c = 'A';
    unsigned char uc = 'B';
    float f = -0.5;
    double d = -0.1;
    long double ld = 0.55;
    bool b = true;
    uint32_t ui32 = 10;
    int8_t t = -100;
    //инициализированный массив, способный содержать значения такого перечисления
    Symbol_type p1 = Cross;
    Symbol_type p2 = Zero;
    int S[2] = {p1,p2};
//содание битовых флагов указывающих какого типа значение в данный момент содержится в объединении
init_example Init;
Init.E.ef = 0.5;
Init.is_int = 0;
Init.is_char = 0;
Init.is_float = 1;
return 0;
}
